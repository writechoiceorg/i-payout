parameters:
  XMerchantId:
    name: X-MerchantId
    in: header
    schema:
      type: string
    description: Your Merchant Identifier (GUID).
    required: true
  Version:
    name: version
    in: path
    schema:
      type: string
      enum: ['1']
    required: true
    example: 1
  BeneficiaryToken:
    name: beneficiaryToken
    in: path
    schema:
      type: string
    required: true
    description: The beneficiary's unique i-payout identifier.
  BeneficiaryTokenQuery:
    name: beneficiaryToken
    in: query
    schema:
      type: string
    required: true
    description: The beneficiary's unique i-payout identifier.
  Country:
    name: country
    in: query
    schema:
      type: string
    description: The beneficiary's two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
    example: US
  FirstName:
    name: firstName
    in: query
    schema:
      type: string
    description: The beneficiary's first name.
    example: Dinesh
  LastName:
    name: lastName
    in: query
    schema:
      type: string
    description: The beneficiary's last name.
    example: Pounraj
  UserName:
    name: userName
    in: query
    schema:
      type: string
    description: The username which identifies the beneficiary to be updated.
  Email:
    name: email
    in: query
    schema:
      type: string
    description: The beneficiary's email address.
    example: dinesh.pounraj@i-payout.com
  CurrencyCode:
    name: currencyCode
    in: path
    schema:
      type: string
    required: true
    description: 3 Character Currency Code. Refer to the [ISO Country and Currency Codes](/reference/country-currency-support) page for details.
    example: USD
  PageNumber:
    name: pageNumber
    in: query
    schema:
      type: integer
    description: The page number to retrieve.
    example: 1
  NumberRecords:
    name: noOfRecords
    in: query
    schema:
      type: integer
    description: The number of records to retrieve per page.
    example: 10
  PageSize:
    name: pageSize
    in: query
    schema:
      type: integer
    description: Number of records per page.
    example: '100'
  StartDate:
    name: startDate
    in: query
    schema:
      type: string
      format: date
    description: The start date in the format `YYYY-MM-DD`, following [ISO 8601 standards](https://en.wikipedia.org/wiki/ISO_8601).
  EndDate:
    name: endDate
    in: query
    schema:
      type: string
      format: date
    description: The end date in the format `YYYY-MM-DD`, following [ISO 8601 standards](https://en.wikipedia.org/wiki/ISO_8601).
schemas:
  DefaultResponse:
    type: object
    properties:
      isSuccess:
        type: boolean
        description: Indicates if the operation was successful.
      message:
        type: string
        description: A message describing the result of the operation.
      statusCode:
        type: integer
        description: The status code of the response.
      logIdentifier:
        type: string
        description: A unique identifier for the log entry.
responses:
  BadRequest:
    description: Bad Request
    content:
      application/json:
        schema:
          $ref: '#/schemas/DefaultResponse'
        example:
          isSuccess: false
          message: Invalid request
          statusCode: 400
          logIdentifier: xyz789
  InternalServerError:
    description: Internal Server Error
    content:
      application/json:
        schema:
          $ref: '#/schemas/DefaultResponse'
        example:
          isSuccess: false
          message: Internal server error
          statusCode: 500
          logIdentifier: def456