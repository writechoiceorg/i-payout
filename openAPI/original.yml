openapi: 3.0.0
info:
  title: Mechant APIs
  version: 1.0.0
servers:
  - url: http://{{baseurl}}
  - url: https://merchantapi.testewallet.com
components:
  securitySchemes:
    apikeyAuth:
      type: http
      scheme: apikey
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: beneficiary
  - name: beneficiary > Valid beneficiary Requests
  - name: beneficiary > Valid beneficiary Requests > Create beneficiary
  - name: beneficiary > Valid beneficiary Requests > Get SSO Token
  - name: beneficiary > Valid beneficiary Requests > Get Account Balance
  - name: beneficiary > Valid beneficiary Requests > Get Account Status
  - name: beneficiary > Valid beneficiary Requests > Get KYC Status
  - name: beneficiary > Valid beneficiary Requests > Get Customer
  - name: beneficiary > Valid beneficiary Requests > beneficiary Exists
  - name: beneficiary > Valid beneficiary Requests > update username
  - name: beneficiary > Invalid beneficiary Requests
  - name: beneficiary > Invalid beneficiary Requests > Create Customer
  - name: beneficiary > Invalid beneficiary Requests > Get SSO Token
  - name: beneficiary > Invalid beneficiary Requests > Get Account Balance
  - name: beneficiary > Invalid beneficiary Requests > Get Account Status
  - name: beneficiary > Invalid beneficiary Requests > Get KYC Status
  - name: beneficiary > Invalid beneficiary Requests > Get Customer
  - name: beneficiary > Invalid beneficiary Requests > Customer Exists Copy
  - name: beneficiary > Invalid beneficiary Requests > update username
  - name: Webhook
  - name: Webhook > Webhook Valid Requests
  - name: Webhook > Webhook Valid Requests > Create Webhook
  - name: Webhook > Webhook Valid Requests > Active Webhook
  - name: Webhook > Webhook Valid Requests > Deactive Webhook
  - name: Webhook > Webhook Valid Requests > Update Webhook
  - name: Webhook > Webhook Valid Requests > DELETE Webhook
  - name: Webhook > Webhook Valid Requests > Get All Merchant Webhook
  - name: Webhook > Webhook Valid Requests > Get All Events
  - name: Webhook > Webhook Invalid requests
  - name: Webhook > Webhook Invalid requests > Create Webhook
  - name: Webhook > Webhook Invalid requests > Active Webhook
  - name: Webhook > Webhook Invalid requests > Deactive Webhook
  - name: Webhook > Webhook Invalid requests > Update Webhook
  - name: Webhook > Webhook Invalid requests > DELETE Webhook Copy
  - name: Webhook > Webhook Invalid requests > Get All Merchant Webhook
  - name: Webhook > Webhook Invalid requests > Get All Events Copy
  - name: Transfer
  - name: Transfer > Transfer Valid Requests
  - name: Transfer > Transfer Valid Requests > Create Transfer
  - name: Transfer > Transfer Valid Requests > Cancel Transfer
  - name: Transfer > Transfer Valid Requests > Approve Transfer
  - name: Transfer > Transfer Valid Requests > Update Transfer
  - name: Transfer > Transfer Invalid Requests
  - name: Transfer > Transfer Invalid Requests > Invalid Create Transfer
  - name: Transfer > Transfer Invalid Requests > Invalid cancel Transfer
  - name: Transfer > Transfer Invalid Requests > Invalid Approve Transfer
  - name: Transfer > Transfer Invalid Requests > Update Transfer
  - name: lookup
  - name: lookup > lookup Valid Requests
  - name: >-
      lookup > lookup Valid Requests > Get bank address details by Routing
      Number
  - name: >-
      lookup > lookup Valid Requests > Get bank and branch details by Swift Code
      and Country Code
  - name: lookup > lookup Valid Requests > Validate IBAN
  - name: lookup > lookup Invalid Requests
  - name: >-
      lookup > lookup Invalid Requests > Get bank address details by Routing
      Number
  - name: >-
      lookup > lookup Invalid Requests > Get bank and branch details by Swift
      Code and Country Code
  - name: lookup > lookup Invalid Requests > Validate IBAN
  - name: report
  - name: report > Report Valid Requests
  - name: report > Report Valid Requests > Get Customer Report
  - name: report > Report Valid Requests > Get Transfer Report
  - name: report > Report Valid Requests > Get Transfers using CustomerToken
  - name: report > Report Invalid Requests
  - name: report > Report Invalid Requests > Get Customer Report
  - name: report > Report Invalid Requests > Get Transfer Report
  - name: report > Report Invalid Requests > Get Transfers using CustomerToken Copy
paths:
  /api/v{version}/beneficiary/create:
    post:
      tags:
        - beneficiary > Invalid beneficiary Requests > Create Customer
      summary: Invalid kyc field
      description: >-
        This API will create a new customer. Once the account has been created,
        system will send an email with the credentials to the customer.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                emailAddress: dineshpounraj09@gmail.com
                firstName: Dinesh
                lastName: Pounraj
                username: '{{username}}'
                companyName: I-Payout
                address: 540 Nw 104th Street
                address2: ''
                city: Fort Lauderdale
                state: Florida
                zipcode: '95894'
                country: US
                phoneNumber: '9584562345'
                cellPhoneNumber: '9584562345'
                dateOfBirth: '1994-10-24'
                preferredLanguage: EN
                kyc:
                  - '*&&%'
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantID}}'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  customerToken: <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  customerToken: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v1/beneficiary/{customerToken}/getSSOToken:
    get:
      tags:
        - beneficiary > Valid beneficiary Requests > Get SSO Token
      summary: Get SSO Token
      description: >-
        This function will give a one time use Single Sign-On token for a
        customer. This token is valid for 10 minutes. This token can be used to
        automatically login the customer to eWallet system.
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantID}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: customerToken
          in: path
          schema:
            type: string
          required: true
          description: (Required) Customer's Token
          example: '{{Customer_Token}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  token: <string>
                  expireInMinutes: <integer>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  token: <string>
                  expireInMinutes: <integer>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/beneficiary/{customerToken}/balance/{currencyCode}:
    get:
      tags:
        - beneficiary > Valid beneficiary Requests > Get Account Balance
      summary: Get Account Balance
      description: >-
        This API will return the balance for a given customer for a specified
        currency.
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantID}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
        - name: customerToken
          in: path
          schema:
            type: string
          required: true
          description: (Required) Customer's Token
          example: '{{Customer_Token}}'
        - name: currencyCode
          in: path
          schema:
            type: string
          required: true
          description: (Required) 3 Character Currency Code
          example: USD
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  currencyCode: <string>
                  balance: <double>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  currencyCode: <string>
                  balance: <double>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/beneficiary/{customerToken}/status:
    get:
      tags:
        - beneficiary > Valid beneficiary Requests > Get Account Status
      summary: Get Account Status
      description: This API will return the account status for a given customer.
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantID}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
        - name: customerToken
          in: path
          schema:
            type: string
          required: true
          description: (Required) Customer's Token
          example: '{{Customer_Token}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  customerStatus: 1
                  isClosed: <boolean>
                  isSuspended: <boolean>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  customerStatus: 1
                  isClosed: <boolean>
                  isSuspended: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/beneficiary/{customerToken}/verificationstatus:
    get:
      tags:
        - beneficiary > Valid beneficiary Requests > Get KYC Status
      summary: Get KYC Status
      description: This API will return the KYC verification status for a given customer.
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantID}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
        - name: customerToken
          in: path
          schema:
            type: string
          required: true
          description: (Required) Customer's Token
          example: '{{Customer_Token}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  isCustomerVerificationCompleted: <boolean>
                  message: <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  isCustomerVerificationCompleted: <boolean>
                  message: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/beneficiary/{customerToken}:
    get:
      tags:
        - beneficiary > Valid beneficiary Requests > Get Customer
      summary: Get beneficiary
      description: This API will return the customer profile information.
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantID}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
        - name: customerToken
          in: path
          schema:
            type: string
          required: true
          description: (Required) Customer token
          example: '{{Customer_Token}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  customerToken: <uuid>
                  username: <string>
                  emailAddress: <string>
                  firstName: <string>
                  lastName: <string>
                  companyName: <string>
                  phoneNumber: <string>
                  cellPhoneNumber: <string>
                  address: <string>
                  address2: <string>
                  state: <string>
                  city: <string>
                  zipCode: <string>
                  country: <string>
                  dateOfBirth: <dateTime>
                  preferredLanguage: <string>
                  isSuspended: <boolean>
                  isInfoVerified: <boolean>
                  isClosed: <boolean>
                  createdDate: <dateTime>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  customerToken: <uuid>
                  username: <string>
                  emailAddress: <string>
                  firstName: <string>
                  lastName: <string>
                  companyName: <string>
                  phoneNumber: <string>
                  cellPhoneNumber: <string>
                  address: <string>
                  address2: <string>
                  state: <string>
                  city: <string>
                  zipCode: <string>
                  country: <string>
                  dateOfBirth: <dateTime>
                  preferredLanguage: <string>
                  isSuspended: <boolean>
                  isInfoVerified: <boolean>
                  isClosed: <boolean>
                  createdDate: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/beneficiary/exists:
    get:
      tags:
        - beneficiary > Valid beneficiary Requests > beneficiary Exists
      summary: beneficiary Exists
      security:
        - bearerAuth: []
      parameters:
        - name: X-MerchantID
          in: header
          schema:
            type: string
          example: '{{MerchantID}}'
        - name: userName
          in: query
          schema:
            type: string
          example: Dineesh
        - name: version
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v{version}/beneficiary/update/username:
    post:
      tags:
        - beneficiary > Valid beneficiary Requests > update username
      summary: Update Username
      description: This API will update the username of an existing customer.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                currentUsername: mannew
                newUsername: newman
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantID}}'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  username: <string>
                  customerToken: <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  username: <string>
                  customerToken: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v1/customer/{customerToken}/getSSOToken:
    get:
      tags:
        - beneficiary > Invalid beneficiary Requests > Get SSO Token
      summary: MerchantID
      description: >-
        This function will give a one time use Single Sign-On token for a
        customer. This token is valid for 10 minutes. This token can be used to
        automatically login the customer to eWallet system.
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantI}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: customerToken
          in: path
          schema:
            type: string
          required: true
          description: (Required) Customer's Token
          example: '{{Customer_Token}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  token: <string>
                  expireInMinutes: <integer>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  token: <string>
                  expireInMinutes: <integer>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/customer/{customerToken}/balance/{currencyCode}:
    get:
      tags:
        - beneficiary > Invalid beneficiary Requests > Get Account Balance
      summary: MerchantID
      description: >-
        This API will return the balance for a given customer for a specified
        currency.
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantI}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
        - name: customerToken
          in: path
          schema:
            type: string
          required: true
          description: (Required) Customer's Token
          example: '{{Customer_Token}}'
        - name: currencyCode
          in: path
          schema:
            type: string
          required: true
          description: (Required) 3 Character Currency Code
          example: USD
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  currencyCode: <string>
                  balance: <double>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  currencyCode: <string>
                  balance: <double>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/customer/{customerToken}/status:
    get:
      tags:
        - beneficiary > Invalid beneficiary Requests > Get Account Status
      summary: MerchantID
      description: This API will return the account status for a given customer.
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantI}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
        - name: customerToken
          in: path
          schema:
            type: string
          required: true
          description: (Required) Customer's Token
          example: '{{Customer_Token}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  customerStatus: 1
                  isClosed: <boolean>
                  isSuspended: <boolean>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  customerStatus: 1
                  isClosed: <boolean>
                  isSuspended: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/customer/{customerToken}/verificationstatus:
    get:
      tags:
        - beneficiary > Invalid beneficiary Requests > Get KYC Status
      summary: MarchantID
      description: This API will return the KYC verification status for a given customer.
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantI}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
        - name: customerToken
          in: path
          schema:
            type: string
          required: true
          description: (Required) Customer's Token
          example: '{{Customer_Token}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  isCustomerVerificationCompleted: <boolean>
                  message: <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  isCustomerVerificationCompleted: <boolean>
                  message: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/customer/{customerToken}:
    get:
      tags:
        - beneficiary > Invalid beneficiary Requests > Get Customer
      summary: MerchantID
      description: This API will return the customer profile information.
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantI}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
        - name: customerToken
          in: path
          schema:
            type: string
          required: true
          description: (Required) Customer token
          example: '{{Customer_Token}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  customerToken: <uuid>
                  username: <string>
                  emailAddress: <string>
                  firstName: <string>
                  lastName: <string>
                  companyName: <string>
                  phoneNumber: <string>
                  cellPhoneNumber: <string>
                  address: <string>
                  address2: <string>
                  state: <string>
                  city: <string>
                  zipCode: <string>
                  country: <string>
                  dateOfBirth: <dateTime>
                  preferredLanguage: <string>
                  isSuspended: <boolean>
                  isInfoVerified: <boolean>
                  isClosed: <boolean>
                  createdDate: <dateTime>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  customerToken: <uuid>
                  username: <string>
                  emailAddress: <string>
                  firstName: <string>
                  lastName: <string>
                  companyName: <string>
                  phoneNumber: <string>
                  cellPhoneNumber: <string>
                  address: <string>
                  address2: <string>
                  state: <string>
                  city: <string>
                  zipCode: <string>
                  country: <string>
                  dateOfBirth: <dateTime>
                  preferredLanguage: <string>
                  isSuspended: <boolean>
                  isInfoVerified: <boolean>
                  isClosed: <boolean>
                  createdDate: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/customer/exists:
    get:
      tags:
        - beneficiary > Invalid beneficiary Requests > Customer Exists Copy
      summary: Invalid MerchantID
      security:
        - bearerAuth: []
      parameters:
        - name: X-MerchantID
          in: header
          schema:
            type: string
          example: '{{MerchantI}}'
        - name: userName
          in: query
          schema:
            type: string
          example: Dinesh
        - name: version
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v{version}/customer/update/username:
    post:
      tags:
        - beneficiary > Invalid beneficiary Requests > update username
      summary: Update MerchantID
      description: This API will update the username of an existing customer.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                currentUsername: Dinesh
                newUsername: Dineesh
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantI}}'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  username: <string>
                  customerToken: <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  username: <string>
                  customerToken: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/webhook/Create:
    post:
      tags:
        - Webhook > Webhook Invalid requests > Create Webhook
      summary: MerchantID
      description: >-
        This API will create a new webhook and send notifications to the
        merchant URL based on the selected events.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                alias: I_Payout
                eventNames:
                  - customer created
                  - customer bank created
                url: ''
                additionalPayloadParam: ''
                additionalHeader:
                  - key: key
                    value: Test_1
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantI}}'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  typeName: <string>
                  protocolName: <string>
                  tlsVersionName: <string>
                  contentTypeName: <string>
                  typeID: 3
                  alias: <string>
                  email: <string>
                  protocolID: 2
                  url: <string>
                  tlsVersionID: 2
                  contentTypeID: 2
                  additionalPayloadParam: <string>
                  acceptedResponseCode: <string>
                  acceptedResponseText: <string>
                  createdByManagerID: <long>
                  dateAddedUTC: <dateTime>
                  isActive: <boolean>
                  token: <uuid>
                  merchantWebHookAdditionalHeaderDetails:
                    - additionalHeaderID: <long>
                      webhookRecordID: <long>
                      key: <string>
                      value: <string>
                    - additionalHeaderID: <long>
                      webhookRecordID: <long>
                      key: <string>
                      value: <string>
                  eventNames:
                    - <string>
                    - <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  typeName: <string>
                  protocolName: <string>
                  tlsVersionName: <string>
                  contentTypeName: <string>
                  typeID: 3
                  alias: <string>
                  email: <string>
                  protocolID: 2
                  url: <string>
                  tlsVersionID: 2
                  contentTypeID: 2
                  additionalPayloadParam: <string>
                  acceptedResponseCode: <string>
                  acceptedResponseText: <string>
                  createdByManagerID: <long>
                  dateAddedUTC: <dateTime>
                  isActive: <boolean>
                  token: <uuid>
                  merchantWebHookAdditionalHeaderDetails:
                    - additionalHeaderID: <long>
                      webhookRecordID: <long>
                      key: <string>
                      value: <string>
                    - additionalHeaderID: <long>
                      webhookRecordID: <long>
                      key: <string>
                      value: <string>
                  eventNames:
                    - <string>
                    - <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/webhook/{token}/activate:
    put:
      tags:
        - Webhook > Webhook Invalid requests > Active Webhook
      summary: Invalid MerchantID
      description: This API will activate the webhook subscription.
      requestBody:
        content: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantI}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
        - name: token
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{Webhook_Token}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  typeName: <string>
                  protocolName: <string>
                  tlsVersionName: <string>
                  contentTypeName: <string>
                  typeID: 3
                  alias: <string>
                  email: <string>
                  protocolID: 2
                  url: <string>
                  tlsVersionID: 2
                  contentTypeID: 2
                  additionalPayloadParam: <string>
                  acceptedResponseCode: <string>
                  acceptedResponseText: <string>
                  createdByManagerID: <long>
                  dateAddedUTC: <dateTime>
                  isActive: <boolean>
                  token: <uuid>
                  merchantWebHookAdditionalHeaderDetails:
                    - additionalHeaderID: <long>
                      webhookRecordID: <long>
                      key: <string>
                      value: <string>
                    - additionalHeaderID: <long>
                      webhookRecordID: <long>
                      key: <string>
                      value: <string>
                  eventNames:
                    - <string>
                    - <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  typeName: <string>
                  protocolName: <string>
                  tlsVersionName: <string>
                  contentTypeName: <string>
                  typeID: 3
                  alias: <string>
                  email: <string>
                  protocolID: 2
                  url: <string>
                  tlsVersionID: 2
                  contentTypeID: 2
                  additionalPayloadParam: <string>
                  acceptedResponseCode: <string>
                  acceptedResponseText: <string>
                  createdByManagerID: <long>
                  dateAddedUTC: <dateTime>
                  isActive: <boolean>
                  token: <uuid>
                  merchantWebHookAdditionalHeaderDetails:
                    - additionalHeaderID: <long>
                      webhookRecordID: <long>
                      key: <string>
                      value: <string>
                    - additionalHeaderID: <long>
                      webhookRecordID: <long>
                      key: <string>
                      value: <string>
                  eventNames:
                    - <string>
                    - <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/webhook/{token}/deactivate:
    put:
      tags:
        - Webhook > Webhook Invalid requests > Deactive Webhook
      summary: Invalid MerchantID
      description: This API will deactivate the webhook subscription.
      requestBody:
        content: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantI}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
        - name: token
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{Webhook_Token}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  typeName: <string>
                  protocolName: <string>
                  tlsVersionName: <string>
                  contentTypeName: <string>
                  typeID: 3
                  alias: <string>
                  email: <string>
                  protocolID: 2
                  url: <string>
                  tlsVersionID: 2
                  contentTypeID: 2
                  additionalPayloadParam: <string>
                  acceptedResponseCode: <string>
                  acceptedResponseText: <string>
                  createdByManagerID: <long>
                  dateAddedUTC: <dateTime>
                  isActive: <boolean>
                  token: <uuid>
                  merchantWebHookAdditionalHeaderDetails:
                    - additionalHeaderID: <long>
                      webhookRecordID: <long>
                      key: <string>
                      value: <string>
                    - additionalHeaderID: <long>
                      webhookRecordID: <long>
                      key: <string>
                      value: <string>
                  eventNames:
                    - <string>
                    - <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  typeName: <string>
                  protocolName: <string>
                  tlsVersionName: <string>
                  contentTypeName: <string>
                  typeID: 3
                  alias: <string>
                  email: <string>
                  protocolID: 2
                  url: <string>
                  tlsVersionID: 2
                  contentTypeID: 2
                  additionalPayloadParam: <string>
                  acceptedResponseCode: <string>
                  acceptedResponseText: <string>
                  createdByManagerID: <long>
                  dateAddedUTC: <dateTime>
                  isActive: <boolean>
                  token: <uuid>
                  merchantWebHookAdditionalHeaderDetails:
                    - additionalHeaderID: <long>
                      webhookRecordID: <long>
                      key: <string>
                      value: <string>
                    - additionalHeaderID: <long>
                      webhookRecordID: <long>
                      key: <string>
                      value: <string>
                  eventNames:
                    - <string>
                    - <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/webhook/{token}:
    put:
      tags:
        - Webhook > Webhook Invalid requests > Update Webhook
      summary: payout batch approved
      description: >-
        This API will update existing webhook record based on given webhook
        token.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                alias: I_Payout
                eventNames:
                  - PAYOUT.BATCH.APPROVED
                url: http://localhost:36073/api/v1/webhook/Create
                additionalPayloadParam: ''
                additionalHeader:
                  - key: key
                    value: Test_1
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantID}}'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
        - name: token
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{Webhook_Token}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  typeName: <string>
                  protocolName: <string>
                  tlsVersionName: <string>
                  contentTypeName: <string>
                  typeID: 3
                  alias: <string>
                  email: <string>
                  protocolID: 2
                  url: <string>
                  tlsVersionID: 2
                  contentTypeID: 2
                  additionalPayloadParam: <string>
                  acceptedResponseCode: <string>
                  acceptedResponseText: <string>
                  createdByManagerID: <long>
                  dateAddedUTC: <dateTime>
                  isActive: <boolean>
                  token: <uuid>
                  merchantWebHookAdditionalHeaderDetails:
                    - additionalHeaderID: <long>
                      webhookRecordID: <long>
                      key: <string>
                      value: <string>
                    - additionalHeaderID: <long>
                      webhookRecordID: <long>
                      key: <string>
                      value: <string>
                  eventNames:
                    - <string>
                    - <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  typeName: <string>
                  protocolName: <string>
                  tlsVersionName: <string>
                  contentTypeName: <string>
                  typeID: 3
                  alias: <string>
                  email: <string>
                  protocolID: 2
                  url: <string>
                  tlsVersionID: 2
                  contentTypeID: 2
                  additionalPayloadParam: <string>
                  acceptedResponseCode: <string>
                  acceptedResponseText: <string>
                  createdByManagerID: <long>
                  dateAddedUTC: <dateTime>
                  isActive: <boolean>
                  token: <uuid>
                  merchantWebHookAdditionalHeaderDetails:
                    - additionalHeaderID: <long>
                      webhookRecordID: <long>
                      key: <string>
                      value: <string>
                    - additionalHeaderID: <long>
                      webhookRecordID: <long>
                      key: <string>
                      value: <string>
                  eventNames:
                    - <string>
                    - <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
    delete:
      tags:
        - Webhook > Webhook Invalid requests > DELETE Webhook Copy
      summary: Invalid MechantID
      description: This API will delete the webhook subscription.
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantI}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
        - name: token
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{Webhook_Token}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  typeName: <string>
                  protocolName: <string>
                  tlsVersionName: <string>
                  contentTypeName: <string>
                  typeID: 2
                  alias: <string>
                  email: <string>
                  protocolID: 2
                  url: <string>
                  tlsVersionID: 2
                  contentTypeID: 2
                  additionalPayloadParam: <string>
                  acceptedResponseCode: <string>
                  acceptedResponseText: <string>
                  createdByManagerID: <long>
                  dateAddedUTC: <dateTime>
                  isActive: <boolean>
                  token: <uuid>
                  merchantWebHookAdditionalHeaderDetails:
                    - additionalHeaderID: <long>
                      webhookRecordID: <long>
                      key: <string>
                      value: <string>
                    - additionalHeaderID: <long>
                      webhookRecordID: <long>
                      key: <string>
                      value: <string>
                  eventNames:
                    - <string>
                    - <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  typeName: <string>
                  protocolName: <string>
                  tlsVersionName: <string>
                  contentTypeName: <string>
                  typeID: 2
                  alias: <string>
                  email: <string>
                  protocolID: 2
                  url: <string>
                  tlsVersionID: 2
                  contentTypeID: 2
                  additionalPayloadParam: <string>
                  acceptedResponseCode: <string>
                  acceptedResponseText: <string>
                  createdByManagerID: <long>
                  dateAddedUTC: <dateTime>
                  isActive: <boolean>
                  token: <uuid>
                  merchantWebHookAdditionalHeaderDetails:
                    - additionalHeaderID: <long>
                      webhookRecordID: <long>
                      key: <string>
                      value: <string>
                    - additionalHeaderID: <long>
                      webhookRecordID: <long>
                      key: <string>
                      value: <string>
                  eventNames:
                    - <string>
                    - <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/webhook/search:
    get:
      tags:
        - Webhook > Webhook Invalid requests > Get All Merchant Webhook
      summary: Invalid MerchantID
      description: This API will return all the webhook subscription
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantID}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: pageNumber
          in: query
          schema:
            type: integer
          example: '1'
        - name: noOfRecords
          in: query
          schema:
            type: integer
          example: '10'
        - name: version
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  totalRecords: <long>
                  webhookDetails:
                    - recordID: <long>
                      merchantID: <long>
                      typeID: 3
                      alias: <string>
                      email: <string>
                      protocolID: 1
                      url: <string>
                      tlsVersionID: 2
                      contentTypeID: 2
                      additionalPayloadParam: <string>
                      acceptedResponseCode: <string>
                      acceptedResponseText: <string>
                      createdByManagerID: <long>
                      dateAddedUTC: <dateTime>
                      isActive: <boolean>
                      identifier: <uuid>
                      merchantName: <string>
                      typeName: <string>
                      protocolName: <string>
                      tlsVersionName: <string>
                      contentTypeName: <string>
                      webHookEventDetails:
                        - eventDetailID: <long>
                          webhookRecordID: <long>
                          eventID: <integer>
                          eventName: <string>
                        - eventDetailID: <long>
                          webhookRecordID: <long>
                          eventID: <integer>
                          eventName: <string>
                    - recordID: <long>
                      merchantID: <long>
                      typeID: 2
                      alias: <string>
                      email: <string>
                      protocolID: 2
                      url: <string>
                      tlsVersionID: 4
                      contentTypeID: 1
                      additionalPayloadParam: <string>
                      acceptedResponseCode: <string>
                      acceptedResponseText: <string>
                      createdByManagerID: <long>
                      dateAddedUTC: <dateTime>
                      isActive: <boolean>
                      identifier: <uuid>
                      merchantName: <string>
                      typeName: <string>
                      protocolName: <string>
                      tlsVersionName: <string>
                      contentTypeName: <string>
                      webHookEventDetails:
                        - eventDetailID: <long>
                          webhookRecordID: <long>
                          eventID: <integer>
                          eventName: <string>
                        - eventDetailID: <long>
                          webhookRecordID: <long>
                          eventID: <integer>
                          eventName: <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  totalRecords: <long>
                  webhookDetails:
                    - recordID: <long>
                      merchantID: <long>
                      typeID: 3
                      alias: <string>
                      email: <string>
                      protocolID: 1
                      url: <string>
                      tlsVersionID: 2
                      contentTypeID: 2
                      additionalPayloadParam: <string>
                      acceptedResponseCode: <string>
                      acceptedResponseText: <string>
                      createdByManagerID: <long>
                      dateAddedUTC: <dateTime>
                      isActive: <boolean>
                      identifier: <uuid>
                      merchantName: <string>
                      typeName: <string>
                      protocolName: <string>
                      tlsVersionName: <string>
                      contentTypeName: <string>
                      webHookEventDetails:
                        - eventDetailID: <long>
                          webhookRecordID: <long>
                          eventID: <integer>
                          eventName: <string>
                        - eventDetailID: <long>
                          webhookRecordID: <long>
                          eventID: <integer>
                          eventName: <string>
                    - recordID: <long>
                      merchantID: <long>
                      typeID: 2
                      alias: <string>
                      email: <string>
                      protocolID: 2
                      url: <string>
                      tlsVersionID: 4
                      contentTypeID: 1
                      additionalPayloadParam: <string>
                      acceptedResponseCode: <string>
                      acceptedResponseText: <string>
                      createdByManagerID: <long>
                      dateAddedUTC: <dateTime>
                      isActive: <boolean>
                      identifier: <uuid>
                      merchantName: <string>
                      typeName: <string>
                      protocolName: <string>
                      tlsVersionName: <string>
                      contentTypeName: <string>
                      webHookEventDetails:
                        - eventDetailID: <long>
                          webhookRecordID: <long>
                          eventID: <integer>
                          eventName: <string>
                        - eventDetailID: <long>
                          webhookRecordID: <long>
                          eventID: <integer>
                          eventName: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/webhook/GetAllEvents:
    get:
      tags:
        - Webhook > Webhook Invalid requests > Get All Events Copy
      summary: Invalid MerchantID
      description: >-
        This API will return a list of all the webhook events that you can
        subscribe to.
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantI}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  webhookEvent:
                    - eventName: <string>
                    - eventName: <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  webhookEvent:
                    - eventName: <string>
                    - eventName: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/transfer/create:
    post:
      tags:
        - Transfer > Transfer Invalid Requests > Invalid Create Transfer
      summary: Authorization
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                merchantTransactionId: TestTransactionID-14
                customerToken: f6178257-4cc2-471c-91b8-64876bfbabdf
                destinationToken: E1A8236B-34CF-473B-9DCE-D1DC72BB69F4
                autoApprove: false
                comments: create test
                dateExpire: '2024-06-30T00:00:00Z'
                sourceAmount: 1000
                sourceCurrency: USD
                destinationAmount: null
                destinationCurrency: USD
                destinationType: 1
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantID}}'
        - name: Content-Type
          in: header
          schema:
            type: string
          example: application/json
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                token: <string>
                dateCreated: <dateTime>
                dateUpdated: <dateTime>
                statusId: <integer>
                fxRate: <double>
                customerFee: <double>
                merchantFree: <double>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                token: <string>
                dateCreated: <dateTime>
                dateUpdated: <dateTime>
                statusId: <integer>
                fxRate: <double>
                customerFee: <double>
                merchantFree: <double>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/transfer/{token}/cancel:
    put:
      tags:
        - Transfer > Transfer Invalid Requests > Invalid cancel Transfer
      summary: Transfer Token
      requestBody:
        content: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantID}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
        - name: token
          in: path
          schema:
            type: string
          required: true
          description: '(Required) '
          example: '{{toke}}'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/transfer/{token}/approve:
    put:
      tags:
        - Transfer > Transfer Invalid Requests > Invalid Approve Transfer
      summary: Transfer Token
      requestBody:
        content: {}
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantID}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
        - name: token
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/transfer/3aefc8ca-05fe-4e17-85c0-1b9a4d7af4ed:
    put:
      tags:
        - Transfer > Transfer Invalid Requests > Update Transfer
      summary: Invalid Authorization
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                merchantTransactionId: Test1719231742Test314
                customerToken: f6178257-4cc2-471c-91b8-64876bfbabdf
                destinationToken: E1A8236B-34CF-473B-9DCE-D1DC72BB69F4
                autoApprove: false
                comments: create test
                dateExpire: '2024-06-30T00:00:00Z'
                sourceAmount: 1000
                sourceCurrency: USD
                destinationAmount: 1000
                destinationCurrency: USD
                destinationType: 1
      security:
        - bearerAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          example: '{{MerchantID}}'
        - name: version
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v{version}/lookup/usa-routing-number/{RoutingNumber}:
    get:
      tags:
        - >-
          lookup > lookup Invalid Requests > Get bank address details by Routing
          Number
      summary: Invalid Authorization
      description: This API will return bank address details based on Routing Number
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantID}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
        - name: RoutingNumber
          in: path
          schema:
            type: integer
          required: true
          example: '011000206'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  routingNumber: <string>
                  bankName: <string>
                  bankAddress: <string>
                  bankCity: <string>
                  bankState: <string>
                  bankZipCode: <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  routingNumber: <string>
                  bankName: <string>
                  bankAddress: <string>
                  bankCity: <string>
                  bankState: <string>
                  bankZipCode: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/lookup/swift-code/{CountryCode}/{SwiftCode}:
    get:
      tags:
        - >-
          lookup > lookup Invalid Requests > Get bank and branch details by
          Swift Code and Country Code
      summary: Invalid Authorization
      description: >-
        This API will return bank and branch details based on Swift Code and
        Country Code
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantID}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
        - name: CountryCode
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The customer's two-letter country code (ISO 3166-1
            alpha-2)
          example: IT
        - name: SwiftCode
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) 8-11 character code that identifies your country, city,
            bank and branch
          example: PASCITM1320
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  swiftCode: <string>
                  bankName: <string>
                  countryName: <string>
                  countryCode: <string>
                  bankAddress: <string>
                  bankCity: <string>
                  bankProvince: <string>
                  bankZipCode: <string>
                  branchName: <string>
                  branchAddress: <string>
                  branchCity: <string>
                  branchProvince: <string>
                  branchZipCode: <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  swiftCode: <string>
                  bankName: <string>
                  countryName: <string>
                  countryCode: <string>
                  bankAddress: <string>
                  bankCity: <string>
                  bankProvince: <string>
                  bankZipCode: <string>
                  branchName: <string>
                  branchAddress: <string>
                  branchCity: <string>
                  branchProvince: <string>
                  branchZipCode: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/lookup/iban/{CountryCode}/{IBAN}:
    get:
      tags:
        - lookup > lookup Invalid Requests > Validate IBAN
      summary: Invalid MerchantID
      description: This API validate IBAN provided
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantI}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
        - name: CountryCode
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The customer's two-letter country code (ISO 3166-1
            alpha-2)
          example: IE
        - name: IBAN
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) IBAN, or International Bank Account Number, is a code
            used to make or receive international payments
          example: IE64IRCE92050112345678
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  iban: <string>
                  countryCode: <string>
                  isValid: <boolean>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  iban: <string>
                  countryCode: <string>
                  isValid: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/report/customers:
    get:
      tags:
        - report > Report Invalid Requests > Get Customer Report
      summary: Invalid MerchantID
      description: This API returns matching customers details based on filters applied
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantI}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: text/plain
        - name: country
          in: query
          schema:
            type: string
          description: The customer's two-letter country code (ISO 3166-1 alpha-2).
          example: US
        - name: firstName
          in: query
          schema:
            type: string
          description: The customer's first name.
          example: Dinesh
        - name: lastName
          in: query
          schema:
            type: string
          description: The customer's last name.
          example: Pounraj
        - name: userName
          in: query
          schema:
            type: string
          description: The username which identifies the customer to be updated.
        - name: email
          in: query
          schema:
            type: string
          description: The customer's email address.
          example: dinesh.pounraj@i-payout.com
        - name: customerToken
          in: query
          schema:
            type: string
          description: The customer's unique i-payout identifier.
          example: f6178257-4cc2-471c-91b8-64876bfbabdf
        - name: pageNumber
          in: query
          schema:
            type: integer
          description: Current page number
          example: '1'
        - name: pageSize
          in: query
          schema:
            type: integer
          description: Number of records per page
          example: '100'
        - name: version
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  totalCount: <integer>
                  pageNumber: <integer>
                  pageSize: <integer>
                  pageCount: <integer>
                  customerDetails:
                    - customerToken: <uuid>
                      username: <string>
                      emailAddress: <string>
                      firstName: <string>
                      lastName: <string>
                      companyName: <string>
                      phoneNumber: <string>
                      cellPhoneNumber: <string>
                      address: <string>
                      address2: <string>
                      state: <string>
                      city: <string>
                      zipCode: <string>
                      country: <string>
                      dateOfBirth: <dateTime>
                      preferredLanguage: <string>
                      isSuspended: <boolean>
                      isInfoVerified: <boolean>
                      isClosed: <boolean>
                      createdDate: <dateTime>
                    - customerToken: <uuid>
                      username: <string>
                      emailAddress: <string>
                      firstName: <string>
                      lastName: <string>
                      companyName: <string>
                      phoneNumber: <string>
                      cellPhoneNumber: <string>
                      address: <string>
                      address2: <string>
                      state: <string>
                      city: <string>
                      zipCode: <string>
                      country: <string>
                      dateOfBirth: <dateTime>
                      preferredLanguage: <string>
                      isSuspended: <boolean>
                      isInfoVerified: <boolean>
                      isClosed: <boolean>
                      createdDate: <dateTime>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  totalCount: <integer>
                  pageNumber: <integer>
                  pageSize: <integer>
                  pageCount: <integer>
                  customerDetails:
                    - customerToken: <uuid>
                      username: <string>
                      emailAddress: <string>
                      firstName: <string>
                      lastName: <string>
                      companyName: <string>
                      phoneNumber: <string>
                      cellPhoneNumber: <string>
                      address: <string>
                      address2: <string>
                      state: <string>
                      city: <string>
                      zipCode: <string>
                      country: <string>
                      dateOfBirth: <dateTime>
                      preferredLanguage: <string>
                      isSuspended: <boolean>
                      isInfoVerified: <boolean>
                      isClosed: <boolean>
                      createdDate: <dateTime>
                    - customerToken: <uuid>
                      username: <string>
                      emailAddress: <string>
                      firstName: <string>
                      lastName: <string>
                      companyName: <string>
                      phoneNumber: <string>
                      cellPhoneNumber: <string>
                      address: <string>
                      address2: <string>
                      state: <string>
                      city: <string>
                      zipCode: <string>
                      country: <string>
                      dateOfBirth: <dateTime>
                      preferredLanguage: <string>
                      isSuspended: <boolean>
                      isInfoVerified: <boolean>
                      isClosed: <boolean>
                      createdDate: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/report/transfers:
    get:
      tags:
        - report > Report Invalid Requests > Get Transfer Report
      summary: Invalid MerchantID
      description: This API returns matching transfers details based on filters applied
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantI}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: text/plain
        - name: customerToken
          in: query
          schema:
            type: string
          description: Customer Token
          example: f6178257-4cc2-471c-91b8-64876bfbabdf
        - name: transferToken
          in: query
          schema:
            type: string
          description: Transfer Token
          example: bbef469f-9bc5-46a2-bf10-5c267336dfc7
        - name: merchantTransactionId
          in: query
          schema:
            type: string
          description: Transaction ID of the Merchant
          example: Test1719487137Test52
        - name: sourceCurrency
          in: query
          schema:
            type: string
          description: Source Currency
          example: USD
        - name: version
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  totalCount: <integer>
                  pageNumber: <integer>
                  pageSize: <integer>
                  pageCount: <integer>
                  transfersDetails:
                    - merchantTransactionID: <string>
                      customerGuid: <string>
                      destinationTypeID: <integer>
                      sourceAmount: <double>
                      sourceCurrency: <string>
                      destinationAmount: <double>
                      destinationCurrency: <string>
                      statusID: <integer>
                      subStatusID: <integer>
                      createdDateUTC: <dateTime>
                      updatedDateUTC: <dateTime>
                      expiryDateUTC: <dateTime>
                      comments: <string>
                      token: <string>
                      fxRate: <double>
                      totalCustomerFee: <double>
                      totalMerchantFee: <double>
                      destinationToken: <uuid>
                    - merchantTransactionID: <string>
                      customerGuid: <string>
                      destinationTypeID: <integer>
                      sourceAmount: <double>
                      sourceCurrency: <string>
                      destinationAmount: <double>
                      destinationCurrency: <string>
                      statusID: <integer>
                      subStatusID: <integer>
                      createdDateUTC: <dateTime>
                      updatedDateUTC: <dateTime>
                      expiryDateUTC: <dateTime>
                      comments: <string>
                      token: <string>
                      fxRate: <double>
                      totalCustomerFee: <double>
                      totalMerchantFee: <double>
                      destinationToken: <uuid>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  totalCount: <integer>
                  pageNumber: <integer>
                  pageSize: <integer>
                  pageCount: <integer>
                  transfersDetails:
                    - merchantTransactionID: <string>
                      customerGuid: <string>
                      destinationTypeID: <integer>
                      sourceAmount: <double>
                      sourceCurrency: <string>
                      destinationAmount: <double>
                      destinationCurrency: <string>
                      statusID: <integer>
                      subStatusID: <integer>
                      createdDateUTC: <dateTime>
                      updatedDateUTC: <dateTime>
                      expiryDateUTC: <dateTime>
                      comments: <string>
                      token: <string>
                      fxRate: <double>
                      totalCustomerFee: <double>
                      totalMerchantFee: <double>
                      destinationToken: <uuid>
                    - merchantTransactionID: <string>
                      customerGuid: <string>
                      destinationTypeID: <integer>
                      sourceAmount: <double>
                      sourceCurrency: <string>
                      destinationAmount: <double>
                      destinationCurrency: <string>
                      statusID: <integer>
                      subStatusID: <integer>
                      createdDateUTC: <dateTime>
                      updatedDateUTC: <dateTime>
                      expiryDateUTC: <dateTime>
                      comments: <string>
                      token: <string>
                      fxRate: <double>
                      totalCustomerFee: <double>
                      totalMerchantFee: <double>
                      destinationToken: <uuid>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/report/{customerToken}/transfers:
    get:
      tags:
        - >-
          report > Report Invalid Requests > Get Transfers using CustomerToken
          Copy
      summary: Invalid MerchantID
      description: This API returns matching transfers details based on the filters applied
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantI}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: text/plain
        - name: version
          in: path
          schema:
            type: string
          required: true
        - name: customerToken
          in: path
          schema:
            type: string
          required: true
          example: f6178257-4cc2-471c-91b8-64876bfbabdf
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  totalCount: <integer>
                  pageNumber: <integer>
                  pageSize: <integer>
                  pageCount: <integer>
                  transfersDetails:
                    - merchantTransactionID: <string>
                      customerGuid: <string>
                      destinationTypeID: <integer>
                      sourceAmount: <double>
                      sourceCurrency: <string>
                      destinationAmount: <double>
                      destinationCurrency: <string>
                      statusID: <integer>
                      subStatusID: <integer>
                      createdDateUTC: <dateTime>
                      updatedDateUTC: <dateTime>
                      expiryDateUTC: <dateTime>
                      comments: <string>
                      token: <string>
                      fxRate: <double>
                      totalCustomerFee: <double>
                      totalMerchantFee: <double>
                      destinationToken: <uuid>
                    - merchantTransactionID: <string>
                      customerGuid: <string>
                      destinationTypeID: <integer>
                      sourceAmount: <double>
                      sourceCurrency: <string>
                      destinationAmount: <double>
                      destinationCurrency: <string>
                      statusID: <integer>
                      subStatusID: <integer>
                      createdDateUTC: <dateTime>
                      updatedDateUTC: <dateTime>
                      expiryDateUTC: <dateTime>
                      comments: <string>
                      token: <string>
                      fxRate: <double>
                      totalCustomerFee: <double>
                      totalMerchantFee: <double>
                      destinationToken: <uuid>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  totalCount: <integer>
                  pageNumber: <integer>
                  pageSize: <integer>
                  pageCount: <integer>
                  transfersDetails:
                    - merchantTransactionID: <string>
                      customerGuid: <string>
                      destinationTypeID: <integer>
                      sourceAmount: <double>
                      sourceCurrency: <string>
                      destinationAmount: <double>
                      destinationCurrency: <string>
                      statusID: <integer>
                      subStatusID: <integer>
                      createdDateUTC: <dateTime>
                      updatedDateUTC: <dateTime>
                      expiryDateUTC: <dateTime>
                      comments: <string>
                      token: <string>
                      fxRate: <double>
                      totalCustomerFee: <double>
                      totalMerchantFee: <double>
                      destinationToken: <uuid>
                    - merchantTransactionID: <string>
                      customerGuid: <string>
                      destinationTypeID: <integer>
                      sourceAmount: <double>
                      sourceCurrency: <string>
                      destinationAmount: <double>
                      destinationCurrency: <string>
                      statusID: <integer>
                      subStatusID: <integer>
                      createdDateUTC: <dateTime>
                      updatedDateUTC: <dateTime>
                      expiryDateUTC: <dateTime>
                      comments: <string>
                      token: <string>
                      fxRate: <double>
                      totalCustomerFee: <double>
                      totalMerchantFee: <double>
                      destinationToken: <uuid>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
