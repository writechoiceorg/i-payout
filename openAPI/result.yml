openapi: 3.0.0
info:
  title: Mechant APIs
  version: 1.0.0
servers:
  - url: http://{{baseurl}}
  - url: https://merchantapi.testewallet.com
components:
  securitySchemes:
    apikeyAuth:
      type: http
      scheme: apikey
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: beneficiary
  - name: beneficiary > Valid beneficiary Requests
  - name: beneficiary > Valid beneficiary Requests > Create beneficiary
  - name: beneficiary > Valid beneficiary Requests > Get SSO Token
  - name: beneficiary > Valid beneficiary Requests > Get Account Balance
  - name: beneficiary > Valid beneficiary Requests > Get Account Status
  - name: beneficiary > Valid beneficiary Requests > Get KYC Status
  - name: beneficiary > Valid beneficiary Requests > Get Customer
  - name: beneficiary > Valid beneficiary Requests > beneficiary Exists
  - name: beneficiary > Valid beneficiary Requests > update username
  - name: beneficiary > Invalid beneficiary Requests
  - name: beneficiary > Invalid beneficiary Requests > Create Customer
  - name: beneficiary > Invalid beneficiary Requests > Get SSO Token
  - name: beneficiary > Invalid beneficiary Requests > Get Account Balance
  - name: beneficiary > Invalid beneficiary Requests > Get Account Status
  - name: beneficiary > Invalid beneficiary Requests > Get KYC Status
  - name: beneficiary > Invalid beneficiary Requests > Get Customer
  - name: beneficiary > Invalid beneficiary Requests > Customer Exists Copy
  - name: beneficiary > Invalid beneficiary Requests > update username
  - name: Webhook
  - name: Webhook > Webhook Valid Requests
  - name: Webhook > Webhook Valid Requests > Create Webhook
  - name: Webhook > Webhook Valid Requests > Active Webhook
  - name: Webhook > Webhook Valid Requests > Deactive Webhook
  - name: Webhook > Webhook Valid Requests > Update Webhook
  - name: Webhook > Webhook Valid Requests > DELETE Webhook
  - name: Webhook > Webhook Valid Requests > Get All Merchant Webhook
  - name: Webhook > Webhook Valid Requests > Get All Events
  - name: Webhook > Webhook Invalid requests
  - name: Webhook > Webhook Invalid requests > Create Webhook
  - name: Webhook > Webhook Invalid requests > Active Webhook
  - name: Webhook > Webhook Invalid requests > Deactive Webhook
  - name: Webhook > Webhook Invalid requests > Update Webhook
  - name: Webhook > Webhook Invalid requests > DELETE Webhook Copy
  - name: Webhook > Webhook Invalid requests > Get All Merchant Webhook
  - name: Webhook > Webhook Invalid requests > Get All Events Copy
  - name: Transfer
  - name: Transfer > Transfer Valid Requests
  - name: Transfer > Transfer Valid Requests > Create Transfer
  - name: Transfer > Transfer Valid Requests > Cancel Transfer
  - name: Transfer > Transfer Valid Requests > Approve Transfer
  - name: Transfer > Transfer Valid Requests > Update Transfer
  - name: Transfer > Transfer Invalid Requests
  - name: Transfer > Transfer Invalid Requests > Invalid Create Transfer
  - name: Transfer > Transfer Invalid Requests > Invalid cancel Transfer
  - name: Transfer > Transfer Invalid Requests > Invalid Approve Transfer
  - name: Transfer > Transfer Invalid Requests > Update Transfer
  - name: lookup
  - name: lookup > lookup Valid Requests
  - name: >-
      lookup > lookup Valid Requests > Get bank address details by Routing
      Number
  - name: >-
      lookup > lookup Valid Requests > Get bank and branch details by Swift Code
      and Country Code
  - name: lookup > lookup Valid Requests > Validate IBAN
  - name: lookup > lookup Invalid Requests
  - name: >-
      lookup > lookup Invalid Requests > Get bank address details by Routing
      Number
  - name: >-
      lookup > lookup Invalid Requests > Get bank and branch details by Swift
      Code and Country Code
  - name: lookup > lookup Invalid Requests > Validate IBAN
  - name: report
  - name: report > Report Valid Requests
  - name: report > Report Valid Requests > Get Customer Report
  - name: report > Report Valid Requests > Get Transfer Report
  - name: report > Report Valid Requests > Get Transfers using CustomerToken
  - name: report > Report Invalid Requests
  - name: report > Report Invalid Requests > Get Customer Report
  - name: report > Report Invalid Requests > Get Transfer Report
  - name: report > Report Invalid Requests > Get Transfers using CustomerToken Copy
paths:
  /api/v{version}/lookup/usa-routing-number/{RoutingNumber}:
    get:
      tags:
        - >-
          lookup > lookup Invalid Requests > Get bank address details by Routing
          Number
      summary: Invalid Authorization
      description: This API will return bank address details based on Routing Number
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantID}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
        - name: RoutingNumber
          in: path
          schema:
            type: integer
          required: true
          example: '011000206'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  routingNumber: <string>
                  bankName: <string>
                  bankAddress: <string>
                  bankCity: <string>
                  bankState: <string>
                  bankZipCode: <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  routingNumber: <string>
                  bankName: <string>
                  bankAddress: <string>
                  bankCity: <string>
                  bankState: <string>
                  bankZipCode: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/lookup/swift-code/{CountryCode}/{SwiftCode}:
    get:
      tags:
        - >-
          lookup > lookup Invalid Requests > Get bank and branch details by
          Swift Code and Country Code
      summary: Invalid Authorization
      description: >-
        This API will return bank and branch details based on Swift Code and
        Country Code
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantID}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
        - name: CountryCode
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The customer's two-letter country code (ISO 3166-1
            alpha-2)
          example: IT
        - name: SwiftCode
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) 8-11 character code that identifies your country, city,
            bank and branch
          example: PASCITM1320
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  swiftCode: <string>
                  bankName: <string>
                  countryName: <string>
                  countryCode: <string>
                  bankAddress: <string>
                  bankCity: <string>
                  bankProvince: <string>
                  bankZipCode: <string>
                  branchName: <string>
                  branchAddress: <string>
                  branchCity: <string>
                  branchProvince: <string>
                  branchZipCode: <string>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  swiftCode: <string>
                  bankName: <string>
                  countryName: <string>
                  countryCode: <string>
                  bankAddress: <string>
                  bankCity: <string>
                  bankProvince: <string>
                  bankZipCode: <string>
                  branchName: <string>
                  branchAddress: <string>
                  branchCity: <string>
                  branchProvince: <string>
                  branchZipCode: <string>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/lookup/iban/{CountryCode}/{IBAN}:
    get:
      tags:
        - lookup > lookup Invalid Requests > Validate IBAN
      summary: Invalid MerchantID
      description: This API validate IBAN provided
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantI}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: version
          in: path
          schema:
            type: string
          required: true
        - name: CountryCode
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) The customer's two-letter country code (ISO 3166-1
            alpha-2)
          example: IE
        - name: IBAN
          in: path
          schema:
            type: string
          required: true
          description: >-
            (Required) IBAN, or International Bank Account Number, is a code
            used to make or receive international payments
          example: IE64IRCE92050112345678
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  iban: <string>
                  countryCode: <string>
                  isValid: <boolean>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  iban: <string>
                  countryCode: <string>
                  isValid: <boolean>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/report/customers:
    get:
      tags:
        - report > Report Invalid Requests > Get Customer Report
      summary: Invalid MerchantID
      description: This API returns matching customers details based on filters applied
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantI}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: text/plain
        - name: country
          in: query
          schema:
            type: string
          description: The customer's two-letter country code (ISO 3166-1 alpha-2).
          example: US
        - name: firstName
          in: query
          schema:
            type: string
          description: The customer's first name.
          example: Dinesh
        - name: lastName
          in: query
          schema:
            type: string
          description: The customer's last name.
          example: Pounraj
        - name: userName
          in: query
          schema:
            type: string
          description: The username which identifies the customer to be updated.
        - name: email
          in: query
          schema:
            type: string
          description: The customer's email address.
          example: dinesh.pounraj@i-payout.com
        - name: customerToken
          in: query
          schema:
            type: string
          description: The customer's unique i-payout identifier.
          example: f6178257-4cc2-471c-91b8-64876bfbabdf
        - name: pageNumber
          in: query
          schema:
            type: integer
          description: Current page number
          example: '1'
        - name: pageSize
          in: query
          schema:
            type: integer
          description: Number of records per page
          example: '100'
        - name: version
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  totalCount: <integer>
                  pageNumber: <integer>
                  pageSize: <integer>
                  pageCount: <integer>
                  customerDetails:
                    - customerToken: <uuid>
                      username: <string>
                      emailAddress: <string>
                      firstName: <string>
                      lastName: <string>
                      companyName: <string>
                      phoneNumber: <string>
                      cellPhoneNumber: <string>
                      address: <string>
                      address2: <string>
                      state: <string>
                      city: <string>
                      zipCode: <string>
                      country: <string>
                      dateOfBirth: <dateTime>
                      preferredLanguage: <string>
                      isSuspended: <boolean>
                      isInfoVerified: <boolean>
                      isClosed: <boolean>
                      createdDate: <dateTime>
                    - customerToken: <uuid>
                      username: <string>
                      emailAddress: <string>
                      firstName: <string>
                      lastName: <string>
                      companyName: <string>
                      phoneNumber: <string>
                      cellPhoneNumber: <string>
                      address: <string>
                      address2: <string>
                      state: <string>
                      city: <string>
                      zipCode: <string>
                      country: <string>
                      dateOfBirth: <dateTime>
                      preferredLanguage: <string>
                      isSuspended: <boolean>
                      isInfoVerified: <boolean>
                      isClosed: <boolean>
                      createdDate: <dateTime>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  totalCount: <integer>
                  pageNumber: <integer>
                  pageSize: <integer>
                  pageCount: <integer>
                  customerDetails:
                    - customerToken: <uuid>
                      username: <string>
                      emailAddress: <string>
                      firstName: <string>
                      lastName: <string>
                      companyName: <string>
                      phoneNumber: <string>
                      cellPhoneNumber: <string>
                      address: <string>
                      address2: <string>
                      state: <string>
                      city: <string>
                      zipCode: <string>
                      country: <string>
                      dateOfBirth: <dateTime>
                      preferredLanguage: <string>
                      isSuspended: <boolean>
                      isInfoVerified: <boolean>
                      isClosed: <boolean>
                      createdDate: <dateTime>
                    - customerToken: <uuid>
                      username: <string>
                      emailAddress: <string>
                      firstName: <string>
                      lastName: <string>
                      companyName: <string>
                      phoneNumber: <string>
                      cellPhoneNumber: <string>
                      address: <string>
                      address2: <string>
                      state: <string>
                      city: <string>
                      zipCode: <string>
                      country: <string>
                      dateOfBirth: <dateTime>
                      preferredLanguage: <string>
                      isSuspended: <boolean>
                      isInfoVerified: <boolean>
                      isClosed: <boolean>
                      createdDate: <dateTime>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/report/transfers:
    get:
      tags:
        - report > Report Invalid Requests > Get Transfer Report
      summary: Invalid MerchantID
      description: This API returns matching transfers details based on filters applied
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantI}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: text/plain
        - name: customerToken
          in: query
          schema:
            type: string
          description: Customer Token
          example: f6178257-4cc2-471c-91b8-64876bfbabdf
        - name: transferToken
          in: query
          schema:
            type: string
          description: Transfer Token
          example: bbef469f-9bc5-46a2-bf10-5c267336dfc7
        - name: merchantTransactionId
          in: query
          schema:
            type: string
          description: Transaction ID of the Merchant
          example: Test1719487137Test52
        - name: sourceCurrency
          in: query
          schema:
            type: string
          description: Source Currency
          example: USD
        - name: version
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  totalCount: <integer>
                  pageNumber: <integer>
                  pageSize: <integer>
                  pageCount: <integer>
                  transfersDetails:
                    - merchantTransactionID: <string>
                      customerGuid: <string>
                      destinationTypeID: <integer>
                      sourceAmount: <double>
                      sourceCurrency: <string>
                      destinationAmount: <double>
                      destinationCurrency: <string>
                      statusID: <integer>
                      subStatusID: <integer>
                      createdDateUTC: <dateTime>
                      updatedDateUTC: <dateTime>
                      expiryDateUTC: <dateTime>
                      comments: <string>
                      token: <string>
                      fxRate: <double>
                      totalCustomerFee: <double>
                      totalMerchantFee: <double>
                      destinationToken: <uuid>
                    - merchantTransactionID: <string>
                      customerGuid: <string>
                      destinationTypeID: <integer>
                      sourceAmount: <double>
                      sourceCurrency: <string>
                      destinationAmount: <double>
                      destinationCurrency: <string>
                      statusID: <integer>
                      subStatusID: <integer>
                      createdDateUTC: <dateTime>
                      updatedDateUTC: <dateTime>
                      expiryDateUTC: <dateTime>
                      comments: <string>
                      token: <string>
                      fxRate: <double>
                      totalCustomerFee: <double>
                      totalMerchantFee: <double>
                      destinationToken: <uuid>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  totalCount: <integer>
                  pageNumber: <integer>
                  pageSize: <integer>
                  pageCount: <integer>
                  transfersDetails:
                    - merchantTransactionID: <string>
                      customerGuid: <string>
                      destinationTypeID: <integer>
                      sourceAmount: <double>
                      sourceCurrency: <string>
                      destinationAmount: <double>
                      destinationCurrency: <string>
                      statusID: <integer>
                      subStatusID: <integer>
                      createdDateUTC: <dateTime>
                      updatedDateUTC: <dateTime>
                      expiryDateUTC: <dateTime>
                      comments: <string>
                      token: <string>
                      fxRate: <double>
                      totalCustomerFee: <double>
                      totalMerchantFee: <double>
                      destinationToken: <uuid>
                    - merchantTransactionID: <string>
                      customerGuid: <string>
                      destinationTypeID: <integer>
                      sourceAmount: <double>
                      sourceCurrency: <string>
                      destinationAmount: <double>
                      destinationCurrency: <string>
                      statusID: <integer>
                      subStatusID: <integer>
                      createdDateUTC: <dateTime>
                      updatedDateUTC: <dateTime>
                      expiryDateUTC: <dateTime>
                      comments: <string>
                      token: <string>
                      fxRate: <double>
                      totalCustomerFee: <double>
                      totalMerchantFee: <double>
                      destinationToken: <uuid>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
  /api/v{version}/report/{customerToken}/transfers:
    get:
      tags:
        - >-
          report > Report Invalid Requests > Get Transfers using CustomerToken
          Copy
      summary: Invalid MerchantID
      description: This API returns matching transfers details based on the filters applied
      security:
        - apikeyAuth: []
      parameters:
        - name: X-MerchantId
          in: header
          schema:
            type: string
          description: (Required) Merchant Identifier (GUID)
          example: '{{MerchantI}}'
        - name: Accept
          in: header
          schema:
            type: string
          example: text/plain
        - name: version
          in: path
          schema:
            type: string
          required: true
        - name: customerToken
          in: path
          schema:
            type: string
          required: true
          example: f6178257-4cc2-471c-91b8-64876bfbabdf
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  totalCount: <integer>
                  pageNumber: <integer>
                  pageSize: <integer>
                  pageCount: <integer>
                  transfersDetails:
                    - merchantTransactionID: <string>
                      customerGuid: <string>
                      destinationTypeID: <integer>
                      sourceAmount: <double>
                      sourceCurrency: <string>
                      destinationAmount: <double>
                      destinationCurrency: <string>
                      statusID: <integer>
                      subStatusID: <integer>
                      createdDateUTC: <dateTime>
                      updatedDateUTC: <dateTime>
                      expiryDateUTC: <dateTime>
                      comments: <string>
                      token: <string>
                      fxRate: <double>
                      totalCustomerFee: <double>
                      totalMerchantFee: <double>
                      destinationToken: <uuid>
                    - merchantTransactionID: <string>
                      customerGuid: <string>
                      destinationTypeID: <integer>
                      sourceAmount: <double>
                      sourceCurrency: <string>
                      destinationAmount: <double>
                      destinationCurrency: <string>
                      statusID: <integer>
                      subStatusID: <integer>
                      createdDateUTC: <dateTime>
                      updatedDateUTC: <dateTime>
                      expiryDateUTC: <dateTime>
                      comments: <string>
                      token: <string>
                      fxRate: <double>
                      totalCustomerFee: <double>
                      totalMerchantFee: <double>
                      destinationToken: <uuid>
        '400':
          description: Bad Request
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
                data:
                  totalCount: <integer>
                  pageNumber: <integer>
                  pageSize: <integer>
                  pageCount: <integer>
                  transfersDetails:
                    - merchantTransactionID: <string>
                      customerGuid: <string>
                      destinationTypeID: <integer>
                      sourceAmount: <double>
                      sourceCurrency: <string>
                      destinationAmount: <double>
                      destinationCurrency: <string>
                      statusID: <integer>
                      subStatusID: <integer>
                      createdDateUTC: <dateTime>
                      updatedDateUTC: <dateTime>
                      expiryDateUTC: <dateTime>
                      comments: <string>
                      token: <string>
                      fxRate: <double>
                      totalCustomerFee: <double>
                      totalMerchantFee: <double>
                      destinationToken: <uuid>
                    - merchantTransactionID: <string>
                      customerGuid: <string>
                      destinationTypeID: <integer>
                      sourceAmount: <double>
                      sourceCurrency: <string>
                      destinationAmount: <double>
                      destinationCurrency: <string>
                      statusID: <integer>
                      subStatusID: <integer>
                      createdDateUTC: <dateTime>
                      updatedDateUTC: <dateTime>
                      expiryDateUTC: <dateTime>
                      comments: <string>
                      token: <string>
                      fxRate: <double>
                      totalCustomerFee: <double>
                      totalMerchantFee: <double>
                      destinationToken: <uuid>
        '500':
          description: Internal Server Error
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                isSuccess: <boolean>
                message: <string>
                statusCode: 0
                logIdentifier: <string>
